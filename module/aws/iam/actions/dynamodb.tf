locals {
  # https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticcontainerregistry.html
  read = [
    "dynamodb:BatchGetItem",
    "dynamodb:ConditionCheckItem",
    "dynamodb:DescribeBackup",
    "dynamodb:DescribeContinuousBackups",
    "dynamodb:DescribeContributorInsights",
    "dynamodb:DescribeEndpoints",
    "dynamodb:DescribeExport",
    "dynamodb:DescribeGlobalTable",
    "dynamodb:DescribeGlobalTableSettings",
    "dynamodb:DescribeImport",
    "dynamodb:DescribeKinesisStreamingDestination",
    "dynamodb:DescribeLimits",
    "dynamodb:DescribeReservedCapacity",
    "dynamodb:DescribeReservedCapacityOfferings",
    "dynamodb:DescribeStream",
    "dynamodb:DescribeTable",
    "dynamodb:DescribeTableReplicaAutoScaling",
    "dynamodb:DescribeTimeToLive",
  ]
  list = [
    "dynamodb:ListBackups",
    "dynamodb:ListContributorInsights",
    "dynamodb:ListExports",
    "dynamodb:ListGlobalTables",
    "dynamodb:ListImports",
    "dynamodb:ListTables",
  ]
  write = [
    "dynamodb:BatchWriteItem",
    "dynamodb:CreateBackup",
    "dynamodb:CreateGlobalTable",
    "dynamodb:CreateTable",
    "dynamodb:CreateTableReplica",
    "dynamodb:DeleteBackup",
    "dynamodb:DeleteItem",
    "dynamodb:DeleteTable",
    "dynamodb:DeleteTableReplica",
    "dynamodb:DisableKinesisStreamingDestination",
    "dynamodb:EnableKinesisStreamingDestination",
    "dynamodb:ExportTableToPointInTime",
    "dynamodb:ImportTable",
    "dynamodb:PartiQLDelete",
    "dynamodb:PartiQLInsert",
    "dynamodb:PartiQLUpdate",
    "dynamodb:PurchaseReservedCapacityOfferings",
    "dynamodb:PutItem",
    "dynamodb:RestoreTableFromAwsBackup",
    "dynamodb:RestoreTableFromBackup",
    "dynamodb:RestoreTableToPointInTime",
    "dynamodb:StartAwsBackupJob",
    "dynamodb:UpdateContinuousBackups",
    "dynamodb:UpdateContributorInsights",
    "dynamodb:UpdateGlobalTable",
    "dynamodb:UpdateGlobalTableSettings",
    "dynamodb:UpdateGlobalTableVersion",
    "dynamodb:UpdateItem",
    "dynamodb:UpdateTable",
    "dynamodb:UpdateTableReplicaAutoScaling",
    "dynamodb:UpdateTimeToLive",
  ]
  permission_management = []
  tagging = [
    "dynamodb:TagResource",
    "dynamodb:UntagResource",
  ]
}
