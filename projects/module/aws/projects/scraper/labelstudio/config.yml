project_name: scraper
service_name: ls
bucket_label_name: label
statements:
  - Bucket:
      actions: ["s3:*"]
      effect: "Allow"
      resources:
        ["arn:aws:s3:::${project_name}-${user_name}-${branch_name}-label"]
  - Microservice:
      actions:
        [
          "eks:*",
          "rds:*",
          "ec2:*",
          "autoscaling:*",
          "autoscaling-plans:*",
          "application-autoscaling:*",
          "logs:*",
          "cloudwatch:*",
          "ssm:*",
          "iam:*",
          "kms:*",
          "elasticloadbalancing:*",
        ]
        # "iam:CreatePolicy", "kms:DescribeKey", "elasticloadbalancing:CreateLoadBalancer", "application-autoscaling:RegisterScalableTarget"
        # "cloudwatch:PutMetricStream",
        # "logs:CreateLogDelivery",
        # "logs:CreateLogStream",
        # "cloudwatch:PutMetricData",
        # "logs:UpdateLogDelivery",
        # "logs:CreateLogGroup",
        # "logs:PutLogEvents",
        # "cloudwatch:ListMetrics"
      effect: "Allow"
      resources: ["*"]
  - Route53RecordsFull:
      actions: [
          # first trial
          "route53:ChangeResourceRecordSets",
          "route53:ListResourceRecordSets",
          "route53:GetHostedZone",
          "route53:GetHostedZoneCount",
          "route53:ListHostedZones",
          "route53:ListHostedZonesByName",
          "route53:ListHostedZonesByVPC",
          "route53:ListTagsForResource",
          # required
          "route53:GetChange",
        ]
      effect: "Allow"
      resources: ["*"]
  - AcmFull:
      actions: ["acm:*"]
      effect: "Allow"
      resources: ["*"]
